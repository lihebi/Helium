.TH "Helium Manpage" "1" 
.SH "Usage"
.RS
.nf
helium [options] <folder>

.fi
.RE


.SH "Arguments"
.RS
.nf
-h [ --help ]                  produce help message
-f [ --config ] arg            config file
--poi arg                      poi file
--whole-poi arg                whole poi
-b [ --benchmark ] arg         benchmark name (including version, e.g. gzip-1.2.4, libgd_3_0_33)
-t [ --tagfile ] arg           tag file
-s [ --snippet-db-folder ] arg snippet database folder
-c [ --src-folder ] arg        source file folder (not orig)
-v [ --verbose ]               verbose output
-o [ --output ] arg            output location
--conf arg                     key=value pair of configure to owerwrite items in helium.conf
-p [ --print ] arg             what to be print
-d [ --debug ] arg             debugging pause point
--slice arg                    slice to use, as the code selection. THIS WILL SET THE CODE SELECTION METHOD TO SLICE
--slice-file arg               the slice file, this will be used as a mask on the AST

.fi
.RE

.SH "Utils"
.RS
.nf
--create-tagfile       create tag file
--create-snippet-db    create snippet database
--create-header-dep    create header dependence table

--print-header-dep     the new dep printing: from the database
--print-callgraph      print callgraph
--print-config         print current config
--print-segments       print segments and exit
--print-segment-info   print segment count, segment size LOC in total, for every file
--print-header-deps    print header dependencies
--check-headers        check if the headers in headers.conf exists on this machine
--create-function-ast  create ast for all the functions in the target benchmarks
--print-headers        print header

.fi
.RE


.SH "Important options"
.RS
.nf
-c src
--conf='cc=clang'
--poi=../../ncompress-poi.txt

.fi
.RE
.SS "Important instrument options: (--conf)"
.RS
.nf
test-number=100
test-global-variable=true
instrument-address=true
instrument-strlen=true
instrument-null=true

.fi
.RE
.SS "Important print options: (--print)"
.RS
.nf
--print='csvsum,ana'

.fi
.RE

.SH "Examples:"
.RS
.nf
helium -s snippets/ cpped/ --print='ci,ce,col' --conf='instrument-strlen=true' -c src --whole-poi=/tmp/poi/poi.org -b gzip-1.2.4

.fi
.RE
.SS "Buffer Overflow bugs:"
.RS
.nf
helium -s snippets/ cpped/ --print='ci,ce,col' --conf='instrument-strlen=true'
helium -s snippets/ cpped/ --print='ci,ce,col' --conf='instrument-strlen=true,test-number=30' -c src --poi=../gzip-poi.txt
helium -s snippets/ cpped/ --print='ci,ce,col' --conf='instrument-strlen=true, test-number=100'

.fi
.RE
.SS "Double free bugs:"
.RS
.nf
helium -s snippets/ cpped/ --print='ci,ce,col' --conf='instrument-address=true'

.fi
.RE
.SS "Null Dereference bugs:"
.RS
.nf
helium -s snippets/ cpped/ --print='ci,ce,col' --conf='instrument-address=true, instrument-null=true'

.fi
.RE

.SS "Preprocessing:"
.RS
.nf
CC=gcc-6 helium-create-snippetdb.sh /path/to/folder
ps -ef | grep 'helium -s' | awk '{print $2}' | xargs kill
helium-run-parrel . 100

.fi
.RE

.SH "Related Scripts"
.SS "cloc summary of C source and header files"
.RS
.nf
cloc --include-lang="C,C/C++ Header" jasper-1.900.1.zip  | grep SUM | awk '{print $5}'
# to use clocc.sh
for fname in *; do echo $fname; clocc.sh $fname; done

.fi
.RE
