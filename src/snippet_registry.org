#+TITLE: Snippet Registry Design Document

* SQLite Table Design
Snippet
The file name is by default to =./code/<Snippet-ID>.txt
| ID | filename        | line number |
|----+-----------------+-------------|
|  1 | /Users/hebi/b.c |         100 |
|  2 | /Users/hebi/a.c |          10 |

Dependence
| ID | from_snippet_id | to_snippet_id |
|----+-----------------+---------------|
|  1 |               1 |             2 |
|  2 |               1 |             3 |
|  2 |               2 |             3 |

Signature

| ID | keyword | kind        | snippet_id |
|----+---------+-------------+------------|
|  1 | AAA     | struct      |          2 |
|  2 | ABCKind | enum        |          3 |
|  3 | AK_Mem1 | enum member |          3 |
|    |         |             |            |

* Command Line Usage
The command takes the benchmark folder and output the index database file and all the code snippets, one in a file.

#+BEGIN_SRC shell
helium --create-tagfile [-o output.tag] <src-file-or-dir> # default output to "tags"
# default output to "snippets/(index.db|code)"
# default create tags file on the fly
helium --create-snippet-db [-o output] [--tagfile sample.tags] <src-file-or-dir>
#+END_SRC

* Ctags
The following is a full list of kinds supported by ctags.
The executed command is =ctags --list-kinds=

#+BEGIN_EXAMPLE
C
    c  classes
    d  macro definitions
    e  enumerators (values inside an enumeration)
    f  function definitions
    g  enumeration names
    l  local variables [off]
    m  class, struct, and union members
    n  namespaces
    p  function prototypes [off]
    s  structure names
    t  typedefs
    u  union names
    v  variable definitions
    x  external and forward variable declarations [off]
C++
    c  classes
    d  macro definitions
    e  enumerators (values inside an enumeration)
    f  function definitions
    g  enumeration names
    l  local variables [off]
    m  class, struct, and union members
    n  namespaces
    p  function prototypes [off]
    s  structure names
    t  typedefs
    u  union names
    v  variable definitions
    x  external and forward variable declarations [off]
#+END_EXAMPLE

* SQL directives

#+header: :results silent
#+header: :dir /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/snippets
#+header: :db index.db
#+BEGIN_SRC sqlite
drop table snippet;
drop table signature;
drop table dependence;
  create table snippet (
    ID INT, filename VARCHAR(500), linum INT,
    PRIMARY KEY (ID)
    );
  create table signature (
    ID INT, keyword VARCHAR(100), kind VARCHAR(1), snippet_id int,
    PRIMARY KEY (ID),
    FOREIGN KEY (snippet_id) REFERENCES snippet(ID)
    );
  create table dependence (
    ID int, from_snippet_id int, to_snippet_id int,
    primary key (ID),
    foreign key (from_snippet_id) references snippet(ID),
    foreign key (to_snippet_id) references snippet(ID)
    );
#+END_SRC

#+header: :dir /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/snippets
#+header: :colnames yes
#+header: :db index.db
#+BEGIN_SRC sqlite
-- delete from snippet;
select * from snippet limit 50;
-- insert into snippet values (0, "/Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h", 103);
#+END_SRC

#+RESULTS:
| ID | filename                                                                            | linum |
|----+-------------------------------------------------------------------------------------+-------|
|  1 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |   103 |
| 10 | fd                                                                                  |     3 |
|  2 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |   111 |
|  3 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |   173 |
|  4 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |   162 |
|  5 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/tailor.h  |   178 |
|  6 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/tailor.h  |   202 |
|  7 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/tailor.h  |    63 |
|  8 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |   243 |
|  9 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |   250 |
| 11 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |   172 |
| 12 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/unlzh.c   |    51 |
| 13 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/lzw.h     |    12 |
| 14 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/lzw.h     |    18 |
| 15 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/lzw.h     |    28 |
| 16 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/trees.c   |    90 |
| 17 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/inflate.c |   264 |
| 18 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/unlzw.c   |   121 |
| 19 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/bits.c    |    78 |
| 20 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/unlzh.c   |    65 |
| 21 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/unlzh.c   |    44 |
| 22 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/lzw.h     |    35 |
| 23 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/unlzh.c   |    66 |
| 24 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |   166 |
| 25 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |    55 |
| 26 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |   163 |
| 27 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/unzip.c   |    27 |
| 28 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/trees.c   |   172 |
| 29 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |   102 |
| 30 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |   110 |
| 31 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |    59 |
| 32 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/unlzh.c   |    40 |
| 33 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/unlzh.c   |    41 |
| 34 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/tailor.h  |   100 |
| 35 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/tailor.h  |   180 |
| 36 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/tailor.h  |   200 |
| 37 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/tailor.h  |    39 |
| 38 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/tailor.h  |    95 |
| 39 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.c    |   100 |
| 40 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.c    |   105 |
| 41 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.c    |   108 |
| 42 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.c    |    89 |
| 43 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.c    |    95 |
| 44 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |    94 |
| 45 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h    |    96 |
| 46 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/trees.c   |   120 |
| 47 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/inflate.c |   223 |
| 48 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/tailor.h  |   135 |
| 49 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/tailor.h  |   219 |
| 50 | /Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/trees.c   |   105 |

** Creating table

#+name: sqlite-populate-test
#+header: :results silent
#+header: :dir ~/tmp/
#+header: :db test-sqlite.db
#+BEGIN_SRC sqlite
  create table snippet (
    ID INT, filename VARCHAR(200), linum INT,
    PRIMARY KEY (ID)
    );
  create table signature (
    ID INT, keyword VARCHAR(30), kind VARCHAR(30), snippet_id int,
    PRIMARY KEY (ID),
    FOREIGN KEY (snippet_id) REFERENCES snippet(ID)
    );
  create table dependence (
    ID int, from_snippet_id int, to_snippet_id int,
    primary key (ID),
    foreign key (from_snippet_id) references snippet(ID),
    foreign key (to_snippet_id) references snippet(ID)
    );
  -- insert into snippet values (3, "hello", 4, "world");
#+END_SRC
** Drop them

#+header: :dir ~/tmp/
#+header: :db test-sqlite.db
#+header: :results silent
#+BEGIN_SRC sqlite
drop table snippet;
drop table signature;
drop table dependence;
#+END_SRC

#+header: :dir ~/tmp/
#+header: :db test-sqlite.db
#+header: :results silent
#+BEGIN_SRC sqlite
delete from snippet;
delete from signature;
delete from dependence;
#+END_SRC


** Tests
#+header: :dir ~/tmp/
#+header: :db test-sqlite.db
#+BEGIN_SRC sqlite
-- insert into snippet values (2, "/Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h", 103);
insert into snippet values (0, "/Users/hebi/github/Helium/benchmark/real-programs/bugbench/gzip-1.2.4/src/gzip.h", 103);
#+END_SRC

#+RESULTS:


** Examining the tables
#+header: :colnames yes
#+header: :results raw
#+header: :dir ~/tmp/
#+header: :db test-sqlite.db
#+BEGIN_SRC sqlite
.schema
#+END_SRC

#+name: sqlite-populate-test
#+header: :colnames yes
#+header: :dir ~/tmp/
#+header: :db test-sqlite.db
#+BEGIN_SRC sqlite
select * from snippet;
#+END_SRC

#+RESULTS: sqlite-populate-test

* Test Code from Babel SQLite
#+name: sqlite-populate-test
#+header: :results silent
#+header: :dir ~/tmp/
#+header: :db test2-sqlite.db
#+begin_src sqlite
create table greeting(one varchar(10), two varchar(10));
insert into greeting values('Hello', 'world!');
#+end_src


#+name: sqlite-hello
#+header: :colnames yes
#+header: :dir ~/tmp/
#+header: :db test2-sqlite.db
#+begin_src sqlite
select * from greeting;
#+end_src

#+RESULTS: sqlite-hello
| one   | two    |
|-------+--------|
| Hello | world! |
