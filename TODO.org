#+TITLE: Helium Project TODO

Now I'm going to instrument everything.
I'm going to have the failure condition given as input.

* Tools
- https://bitbucket.org/nguyenthanhvuh/dig/wiki/Home

* TODO Stack
- refactor backend analysis

* TODO Report
- risk writeup
- testing
- data (about what?)

* TODO Back
- Pairwise corner testing
- z3 symbolic exe
- output warning instead of assertion
- if callsite cannot compile, no need to continue
- log trace verbose

* Context search
- figure out the different backend oracle for different type of bugs (like instrument-xxx=true)
- make it stable for examples

Enhancement:
- Add default action for different bug type



* Backend Type Design
** instrument type
Buffer overflow:
- strlen

2-f, u-a-f:
- NULL
- address
- free-list

Null-deref:
- NULL

Infinite-loop:
- loop jump out condition
- function parameter

** Analyze type
Buffer overflow:
- strlen v.s. buffer size

2-f:
- pointer address in free-d list

Null-deref:
- Pointer is NULL, use correct runs to identify the pointer

Infinite-loop:
- pre-condition only
- invariant not satisfy jumpout condition

Let's check pre-condition along:
- Have a reasonable invariant
- pre-condition relate to only input variables
- TODO ensure the pre-condition is not satisfied by invalid tests. I.e. the pre-condition is sure to trigger!
