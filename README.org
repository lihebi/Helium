#+TITLE: Helium Framework

* Install
** Prerequisite
*** boost
Require boost 1.59 or above.
*** pugixml
#+begin_src shell
cd lib/pugixml
cp Makefile.linux Makefile # for linux
cp Makefile.mac Makefile # for mac
make
make install
#+end_src

*** ctags
#+begin_src shell
cd lib/ctags
cp Makefile.linux Makefile # for linux
cp Makefile.mac Makefile # for mac
make
make install
#+end_src

Also, on Mac, you probably need to install the ctags executable.

#+BEGIN_EXAMPLE
brew install ctags
#+END_EXAMPLE

This will overwrite the =readtags.h= header file.

*** google test (optional, required for running built-in unit tests)
Follow instructions on [[https://github.com/google/googletest][Google Test]].
Basically

#+BEGIN_SRC shell
mkdir build
cd build
cmake ..
make
make install # will install libgtest.a to standard location
#+END_SRC
*** sqlite3
Install the sqlite3 develop package.
*** SrcML
http://www.srcml.org/


** compile

before you run helium, you need to make the system type tag file.
#+BEGIN_EXAMPLE
make systype.tags
#+END_EXAMPLE

Then compile and run unit tests:

#+begin_src shell
make
make test
#+end_src

** Trouble shooting
On =CentOS=, the default =LD_LIBRARY_PATH= does not contains the =/usr/local/lib=.
The consequence is the =-lpugi= and =-lctags= are not recognized because they are put in that directory.
Set it, or edit =/etc/ld.conf.d/local.conf= and add the path.
After that, run =ldconf -v= as root to update the database.

Also, the error:
#+BEGIN_QUOTE
Linux error while loading shared libraries: cannot open shared object file: No such file or directory
#+END_QUOTE

is also because the cache is not updated.
So the solution is =sudo ldconfig=

* Run

** third party libraries
Helium relies on ~headers.conf~ for the headers to include.
Helium will test if the system has that header.
If yes, helium will include that header file in ~support.h~, and use the optional flags in ~Makefile~.

So, when you run Helium, be sure to check if you have installed that package.
If you doesn't install that, Helium will ignore the config even if you put that in ~headers.conf~.

To install all the dependencies in this file, use this command:

#+begin_src shell
cat headers.conf  | grep devel | sed -e "s/# //" | awk '{print "sudo yum -y install" ,$0}' | bash
#+end_src

After installing every library, you may need to ~make systype.tags~ so that the index file knows all the system types you just installed..

** before you run

#+begin_src shell
. env_setup.sh # set up HELIUM_HOME to CURRENT directory, add ./bin to PATH
make systype.tags # create system type tag file. Need only once on a new platform
#+end_src

** show help
Run ~helium~ to show help information.
Run ~helium -p~ to see print option help info.
Run ~helium -d~ to see debug option help info.

** config
The default config file is ~$HELIUM_HOME/helium.conf~.
It can be specified by ~-f~ argument.
Use ~helium --print-config~ to show the current config.
Use ~helium --conf "key=value,key2=value2"~ to change each single config.

~helium -t <tagfile>~ to specify the tag file to use, otherwise Helium will generate tagfile on-the-fly.

** some examples
#+begin_src shell
helium -t mem.tags --conf "code-selection=loop,skip-to-seg=21" memcached/ -p "as,ce" -d "ce"
#+end_src
